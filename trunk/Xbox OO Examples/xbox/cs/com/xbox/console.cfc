<cfcomponent displayname="console" output="false">		<cfproperty name="consoleID" type="String" default="" />		<cfproperty name="type" type="String" default="" />		<cfproperty name="storage" type="Numeric" default="" />		<cfproperty name="accessories" type="Array" />		<cfproperty name="controls" type="Array" />		<cfproperty name="games" type="Array" />			<!---	PROPERTIES	--->	<cfset variables.instance = StructNew() />	<!---	INITIALIZATION / CONFIGURATION	--->	<cffunction name="init" access="public" returntype="cs.com.xbox.console" output="false">		<cfargument name="consoleID" type="string" required="false" default="" />		<cfargument name="type" type="string" required="false" default="" />		<cfargument name="storage" type="string" required="false" default="" />		<cfargument name="accessories" type="array" required="false" default="#arrayNew(1)#" />		<cfargument name="controls" type="array" required="false" default="#arrayNew(1)#" />		<cfargument name="games" type="array" required="false" default="#arrayNew(1)#" />				<!--- run setters --->		<cfset setconsoleID(arguments.consoleID) />		<cfset settype(arguments.type) />		<cfset setstorage(arguments.storage) />		<cfset setAccessories(arguments.accessories) />		<cfset setControls(arguments.controls) />		<cfset setGames(arguments.games) />				<!--- this is the position of the loaded game in the games array. by default no game is loaded --->		<cfset unloadGame() />				<cfreturn this /> 	</cffunction>	<!---	PUBLIC FUNCTIONS	--->	<cffunction name="setMemento" access="public" returntype="cs.com.xbox.console" output="false">		<cfargument name="memento" type="struct" required="yes"/>		<cfset variables.instance = arguments.memento />		<cfreturn this />	</cffunction>	<cffunction name="getMemento" access="public" returntype="struct" output="false" >		<cfreturn variables.instance />	</cffunction>	<cffunction name="validate" access="public" returntype="array" output="false">		<cfset var errors = arrayNew(1) />		<cfset var thisError = structNew() />				<!--- consoleID --->		<cfif (NOT len(trim(getconsoleID())))>			<cfset thisError.field = "consoleID" />			<cfset thisError.type = "required" />			<cfset thisError.message = "consoleID is required" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- type --->		<cfif (NOT len(trim(gettype())))>			<cfset thisError.field = "type" />			<cfset thisError.type = "required" />			<cfset thisError.message = "type is required" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<!--- storage --->		<cfif (NOT len(trim(getstorage())))>			<cfset thisError.field = "storage" />			<cfset thisError.type = "required" />			<cfset thisError.message = "storage is required" />			<cfset arrayAppend(errors,duplicate(thisError)) />		</cfif>				<cfreturn errors />	</cffunction>	<!---	ACCESSORS	--->	<cffunction name="setconsoleID" access="public" returntype="void" output="false">		<cfargument name="consoleID" type="string" required="true" />		<cfset variables.instance.consoleID = arguments.consoleID />	</cffunction>	<cffunction name="getconsoleID" access="public" returntype="string" output="false">		<cfreturn variables.instance.consoleID />	</cffunction>	<cffunction name="settype" access="public" returntype="void" output="false">		<cfargument name="type" type="string" required="true" />		<cfset variables.instance.type = arguments.type />	</cffunction>	<cffunction name="gettype" access="public" returntype="string" output="false">		<cfreturn variables.instance.type />	</cffunction>	<cffunction name="setstorage" access="public" returntype="void" output="false">		<cfargument name="storage" type="string" required="true" />		<cfset variables.instance.storage = arguments.storage />	</cffunction>	<cffunction name="getstorage" access="public" returntype="string" output="false">		<cfreturn variables.instance.storage />	</cffunction>		<cffunction name="setAccessories" access="public" returntype="void" output="false">		<cfargument name="accessories" type="array" required="true" />		<cfset variables.instance.accessories = arguments.accessories />	</cffunction>	<cffunction name="addAccessory" access="public" returntype="void" output="false">		<cfargument name="accessory" type="cs.com.xbox.accessories.accessory" required="true" />		<cfset arrayAppend(variables.instance.accessories,arguments.accessory) />	</cffunction>	<cffunction name="getAccessories" access="public" returntype="array" output="false">		<cfreturn variables.instance.accessories />	</cffunction>		<cffunction name="setControls" access="public" returntype="void" output="false">		<cfargument name="controls" type="array" required="true" />				<cfparam name="variables.instance.controls" default="#arrayNew(1)#" />		<cfif (arrayLen(variables.instance.controls) lte 4)>			<cfset variables.instance.controls = arguments.controls />		<cfelse>			<cfthrow errorcode="cs.com.xbox.console.maxControllers" message="You are trying to add more than the allotted four controllers" />		</cfif>	</cffunction>	<cffunction name="addControl" access="public" returntype="void" output="false">		<cfargument name="control" type="cs.com.xbox.controls.control" required="true" />				<!--- our xbox only has 4 control slots --->		<cfif (arrayLen(variables.instance.controls) lt 4)>			<cfset arrayAppend(variables.instance.controls,arguments.control) />		<cfelse>			<cfthrow errorcode="cs.com.xbox.console.maxControllers" message="You have filled the four controller slots" />		</cfif>	</cffunction>	<cffunction name="getControls" access="public" returntype="array" output="false">		<cfreturn variables.instance.controls />	</cffunction>		<cffunction name="setGames" access="public" returntype="void" output="false">		<cfargument name="games" type="array" required="true" />		<cfset variables.instance.games = arguments.games />	</cffunction>	<cffunction name="addGame" access="public" returntype="void" output="false">		<cfargument name="game" type="cs.com.xbox.games.game" required="true" />		<cfset arrayAppend(variables.instance.games,arguments.game) />	</cffunction>	<cffunction name="getGames" access="public" returntype="array" output="false">		<cfreturn variables.instance.games />	</cffunction>	<cffunction name="loadGame" access="public" returntype="void" output="false">		<cfargument name="gameName" type="string" required="true" />				<cfset var i = 0 />		<cfset var games = getGames() />		<cfloop from="1" to="#arrayLen(games)#" index="i">			<cfif games[i].getGameName() eq arguments.gameName>				<cfset variables.loadedGame = i />				<cfbreak />			</cfif>		</cfloop>	</cffunction>	<cffunction name="unloadGame" access="public" returntype="void" output="false">		<cfset variables.loadedGame = 0 />	</cffunction>	<cffunction name="isGameLoaded" access="public" returntype="boolean" output="false">		<cfreturn variables.loadedGame GT 0 />	</cffunction>	<cffunction name="getLoadedGame" access="public" returntype="cs.com.xbox.games.game" output="false">		<cfset var games = getGames() />		<cfif not isGameLoaded()>			<cfthrow errorcode="cs.com.xbox.console.noGameLoaded" />		</cfif>		<cfreturn games[variables.loadedGame] />	</cffunction>	<!---	DUMP	--->	<cffunction name="dump" access="public" output="true" return="void">		<cfargument name="abort" type="boolean" default="false" />		<cfdump var="#variables.instance#" />		<cfif arguments.abort>			<cfabort />		</cfif>	</cffunction></cfcomponent>
