<cffunction name="getcontrolID" access="public" returntype="uuid" default="uuid" hint="" output="false">
<cfscript>
return getTransferObject().getcontrolID();
</cfscript>
</cffunction>

<cffunction name="getheadset" access="public" returntype="boolean" default="boolean" hint="" output="false">
<cfscript>
return getTransferObject().getheadset();
</cfscript>
</cffunction>

<cffunction name="getIsClone" access="public" returntype="boolean" default="boolean" hint="" output="false">
<cfscript>
return getTransferObject().getIsClone();
</cfscript>
</cffunction>

<cffunction name="actionAfterUpdateTransferEvent" access="public" returntype="void" default="void" hint="" output="false">
<cfargument name="event" type="transfer.com.events.TransferEvent" required="true" default="">
<cfscript>
getTransferObject().actionAfterUpdateTransferEvent(arguments.event);
</cfscript>
</cffunction>

<cffunction name="setwireless" access="public" returntype="void" default="void" hint="" output="false">
<cfargument name="wireless" type="boolean" required="true" default="">
<cfscript>
getTransferObject().setwireless(arguments.wireless);
</cfscript>
</cffunction>

<cffunction name="sameTransfer" access="public" returntype="boolean" default="boolean" hint="Checks to see if 2 transfer objects are the same" output="false">
<cfargument name="transfer" type="transfer.com.TransferObject" required="Yes" default="">
<cfscript>
return getTransferObject().sameTransfer(arguments.transfer);
</cfscript>
</cffunction>

<cffunction name="getOriginalTransferObject" access="public" returntype="transfer.com.TransferObject" default="transfer.com.TransferObject" hint="Returns this object" output="false">
<cfscript>
return getTransferObject().getOriginalTransferObject();
</cfscript>
</cffunction>

<cffunction name="actionAfterDeleteTransferEvent" access="public" returntype="void" default="void" hint="" output="false">
<cfargument name="event" type="transfer.com.events.TransferEvent" required="true" default="">
<cfscript>
getTransferObject().actionAfterDeleteTransferEvent(arguments.event);
</cfscript>
</cffunction>

<cffunction name="equalsTransfer" access="public" returntype="boolean" default="boolean" hint="If an object is persisted, returns true if they are of the same class and same id. If not, returns true if they are the same object." output="false">
<cfargument name="transfer" type="transfer.com.TransferObject" required="true" default="">
<cfscript>
return getTransferObject().equalsTransfer(arguments.transfer);
</cfscript>
</cffunction>

<cffunction name="getMemento" access="public" returntype="struct" default="struct" hint="Returns the memento for all non-lazy members of this object" output="false">
<cfscript>
return getTransferObject().getMemento();
</cfscript>
</cffunction>

<cffunction name="getwireless" access="public" returntype="boolean" default="boolean" hint="" output="false">
<cfscript>
return getTransferObject().getwireless();
</cfscript>
</cffunction>

<cffunction name="init" access="public" returntype="transfer.com.TransferObject" default="transfer.com.TransferObject" hint="" output="false">
<cfargument name="transfer" type="transfer.com.Transfer" required="true" default="">
<cfargument name="utility" type="transfer.com.util.Utility" required="true" default="">
<cfargument name="nullable" type="transfer.com.sql.Nullable" required="true" default="">
<cfargument name="thisObject" type="transfer.com.TransferObject" required="true" default="">
<cfscript>
return getTransferObject().init(arguments.transfer,arguments.utility,arguments.nullable,arguments.thisObject);
</cfscript>
</cffunction>

<cffunction name="setcontrolID" access="public" returntype="void" default="void" hint="" output="false">
<cfargument name="controlID" type="uuid" required="true" default="">
<cfscript>
getTransferObject().setcontrolID(arguments.controlID);
</cfscript>
</cffunction>

<cffunction name="setMemento" access="public" returntype="void" default="void" hint="" output="false">
<cfargument name="memento" type="struct" required="true" default="">
<cfscript>
getTransferObject().setMemento(arguments.memento);
</cfscript>
</cffunction>

<cffunction name="clone" access="public" returntype="transfer.com.TransferObject" default="transfer.com.TransferObject" hint="Get a deep clone of this object" output="false">
<cfscript>
return getTransferObject().clone();
</cfscript>
</cffunction>

<cffunction name="getIsDirty" access="public" returntype="boolean" default="boolean" hint="" output="false">
<cfscript>
return getTransferObject().getIsDirty();
</cfscript>
</cffunction>

<cffunction name="getIsPersisted" access="public" returntype="boolean" default="boolean" hint="" output="false">
<cfscript>
return getTransferObject().getIsPersisted();
</cfscript>
</cffunction>

<cffunction name="copyValuesTo" access="public" returntype="void" default="void" hint="Copies the values of this object to one of the same class" output="false">
<cfargument name="transfer" type="transfer.com.TransferObject" required="true" default="">
<cfscript>
getTransferObject().copyValuesTo(arguments.transfer);
</cfscript>
</cffunction>

<cffunction name="getPropertyMemento" access="public" returntype="struct" default="struct" hint="returns the memento for properties" output="false">
<cfscript>
return getTransferObject().getPropertyMemento();
</cfscript>
</cffunction>

<cffunction name="getClassName" access="public" returntype="string" default="string" hint="The class name of the TransferObject" output="false">
<cfscript>
return getTransferObject().getClassName();
</cfscript>
</cffunction>

<cffunction name="setPropertyMemento" access="public" returntype="void" default="void" hint="" output="false">
<cfargument name="memento" type="struct" required="true" default="">
<cfscript>
getTransferObject().setPropertyMemento(arguments.memento);
</cfscript>
</cffunction>

<cffunction name="actionAfterCreateTransferEvent" access="public" returntype="void" default="void" hint="" output="false">
<cfargument name="event" type="transfer.com.events.TransferEvent" required="true" default="">
<cfscript>
getTransferObject().actionAfterCreateTransferEvent(arguments.event);
</cfscript>
</cffunction>

<cffunction name="setheadset" access="public" returntype="void" default="void" hint="" output="false">
<cfargument name="headset" type="boolean" required="true" default="">
<cfscript>
getTransferObject().setheadset(arguments.headset);
</cfscript>
</cffunction>

<cffunction name="actionBeforeDiscardTransferEvent" access="public" returntype="void" default="void" hint="" output="false">
<cfargument name="event" type="transfer.com.events.TransferEvent" required="true" default="">
<cfscript>
getTransferObject().actionBeforeDiscardTransferEvent(arguments.event);
</cfscript>
</cffunction>


